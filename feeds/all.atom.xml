<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>smallest</title><link href="n/" rel="alternate"></link><link href="n/feeds/all.atom.xml" rel="self"></link><id>n/</id><updated>2013-11-10T00:00:00+08:00</updated><entry><title>deploy a static blog on github page by pelican</title><link href="n/deploy-a-static-blog-on-github-page-by-pelican.html" rel="alternate"></link><updated>2013-11-10T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-11-10:deploy-a-static-blog-on-github-page-by-pelican.html</id><summary type="html">&lt;h3&gt;Why use pelican and github&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;github provides github pages &lt;/li&gt;
&lt;li&gt;pelican can transform md to html &lt;/li&gt;
&lt;li&gt;md is easy to use and peform well&lt;/li&gt;
&lt;li&gt;create theme yourself&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;pelican create static site&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;pelican-quickstart&lt;/li&gt;
&lt;li&gt;pelican content -o output -t template&lt;/li&gt;
&lt;li&gt;cd output;python -m pelican.server&lt;/li&gt;
&lt;li&gt;or you can edit Makefile and use make to simplify such command as above two&lt;/li&gt;
&lt;li&gt;ghp-import output;git push git@github.com:smallest/smallest.github.io.git gh-pages 
 其中遇到了一个问题，查了好几个小时，在第二步中，会在output中生成对应的.git文件夹，第五步的时候上传不了，提示不能上传引用。把其中的.git文件夹删除后，就成功上传了，不知道什么导致了这样的问题，不会是要每次生成output文件夹后去删除.git后再提交吧？自动生成.git文件夹的用处又是什么呢？&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Linux-wiki</title><link href="n/linux-wiki.html" rel="alternate"></link><updated>2013-11-10T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-11-10:linux-wiki.html</id><summary type="html">&lt;h4&gt;系统时间同步&lt;/h4&gt;
&lt;p&gt;寻找一个网络时间服务器，比如一些国家授时中心
台警大授时中心(台湾)
asia.pool.ntp.org
中科院授时中心(西安)
210.72.145.44
执行命令:ntpdate asia.pool.ntp.org;连接210.72.145.44时提示没有这个服务器，不知道为什么&lt;/p&gt;</summary></entry><entry><title>Installation history of programs</title><link href="n/installation-history-of-programs.html" rel="alternate"></link><updated>2013-11-04T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-11-04:installation-history-of-programs.html</id><summary type="html">&lt;h3&gt;editor&lt;/h3&gt;
&lt;h4&gt;Sublime Text&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;why 
    getbootstrap.com recommended me to use it when I was reading the part of &lt;a href="http://getbootstrap.com/2.3.2/getting-started.html"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Installation: manual&lt;/li&gt;
&lt;li&gt;The installation package
    location:"~/install_package/tar/Sublime Text 2.0.2.tar.bz2"&lt;/li&gt;
&lt;li&gt;The executive file
    location:"~/install_package/tar/Sublime Text 2/"&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;autojump&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;why
    help you change directory more quickly,and I know this tool from the blog of &lt;a href="http://jsliang.com/blog/2012/09/autojump-a-cd-command-that-learns.html"&gt;Jenny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Installation: apt-get install autojump&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;gph-import&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;why
    docs.getpelican.com says it makes it really easy to push the content of the output dir generated by Pelican to a repository’s gh-pages branch on GitHub.
    Howerver,I couldn't understand&lt;/li&gt;
&lt;li&gt;Installation: pip install ghp-import&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Pelican&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;why
    a static site generator,written in python&lt;/li&gt;
&lt;li&gt;Installation: pip install pelican&lt;/li&gt;
&lt;li&gt;date:2013-11-08&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>javascript-wiki</title><link href="n/javascript-wiki.html" rel="alternate"></link><updated>2013-11-04T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-11-04:javascript-wiki.html</id><summary type="html">&lt;h3&gt;syntax&lt;/h3&gt;
&lt;h4&gt;闭包&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://coolshell.cn/articles/6731.html"&gt;理解Javascript闭包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Tips of javascript</title><link href="n/tips-of-javascript.html" rel="alternate"></link><updated>2013-11-04T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-11-04:tips-of-javascript.html</id><summary type="html">&lt;p&gt;&lt;a href="http://justjavac.com/javascript/2013/03/25/learning-javascript-my-experience-and-advice.html"&gt;学习 JavaScript - 我的经验与建议&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>python-wiki</title><link href="n/python-wiki.html" rel="alternate"></link><updated>2013-10-19T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-10-19:python-wiki.html</id><summary type="html">&lt;h3&gt;语法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;函数修饰符@&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/huxi/archive/2011/03/01/1967600.html"&gt;Python装饰器与面向切面编程&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.python.org/dev/peps/pep-0318/"&gt;PEP 318 -- Decorators for Functions and Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>"regexp wiki"</title><link href="n/regexp-wiki.html" rel="alternate"></link><updated>2013-10-16T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-10-16:regexp-wiki.html</id><summary type="html">&lt;h3&gt;匹配模式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.$&lt;/code&gt;匹配行末字符&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>css-wiki</title><link href="n/css-wiki.html" rel="alternate"></link><updated>2013-10-10T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-10-10:css-wiki.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;inline-block trick involving 'font-size:0'
The problem is that elements with display: inline-block have "extra gaps", due to being affected by whitespace in the HTML, see: http://jsfiddle.net/thirtydot/4z4v2/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As shown, the gaps can be removed by removing the whitespace in the HTML. However, removing that whitespace is sometimes an undesirable fix: for example, it makes the HTML more difficult to work with.&lt;/p&gt;
&lt;p&gt;So, I suggested this workaround: http://jsfiddle.net/thirtydot/4z4v2/1/
&lt;code&gt;ul {
    font-size: 0;
    letter-spacing: -1px;
}
li {
    font-size: medium;
    letter-spacing: normal;
}&lt;/code&gt;&lt;/p&gt;</summary></entry><entry><title>Algorithm pratice</title><link href="n/algorithm-pratice.html" rel="alternate"></link><updated>2013-10-07T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-10-07:algorithm-pratice.html</id><summary type="html">&lt;h3&gt;Common Algorithm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Dijkstra &lt;/li&gt;
&lt;li&gt;Floyd-warshall&lt;/li&gt;
&lt;li&gt;找n个数的中位数&lt;/li&gt;
&lt;li&gt;排序问题&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>抓取豆瓣的加心歌曲</title><link href="n/zhua-qu-dou-ban-de-jia-xin-ge-qu.html" rel="alternate"></link><updated>2013-09-26T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-26:zhua-qu-dou-ban-de-jia-xin-ge-qu.html</id><summary type="html">&lt;p&gt;对python的大名早有耳闻，是一种比较流行的脚本语言，python和ruby差不多是一个时候听说的，感觉它们的关系可能就跟vim和Emacs一样。那时候也是觉得自己的工程实践太少了，后来了解到豆瓣网站就主要是python写的。豆瓣是自己比较喜欢的网站，界面简洁、内容有营养、熟悉而又不失新鲜感。于是迫不及待地想系统地学习这门语言，借了《python简明教程》,粗略地看了一遍。参考了[welken博客]（http://www.wklken.me/) 的一些总结还有一个好玩的网站&lt;a href="http://www.pythonchallenge.com/"&gt;python challenge&lt;/a&gt;,那会主要时候看了别人写的答案，自己都不会，只是尝试这样一种游戏的学习方式多了解一些知识。暑假看了&lt;a href="http://djangobook.py3k.cn/2.0/"&gt;the Djangobook&lt;/a&gt;，原理和核心思想自己还是没掌握，需要再去细致阅读和理解。&lt;/p&gt;
&lt;p&gt;还了解到python用于网页抓取比较方便，了解了&lt;a href="http://blog.csdn.net/sding/article/details/6214207"&gt;爬虫抓站的基本技巧&lt;/a&gt;，有些还是技巧不太理解，可能是对www的通信机制还不太了解。当初照着别人写的登录网站的方法登录了睿思，那么就觉得很神奇，竟然可以脱离浏览器用脚本登录网站，这种上网的体验从未有过。&lt;/p&gt;</summary></entry><entry><title>编程之美</title><link href="n/bian-cheng-zhi-mei.html" rel="alternate"></link><updated>2013-09-24T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-24:bian-cheng-zhi-mei.html</id><summary type="html">&lt;h3&gt;编程之美&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.csdn.net/skyline0623/article/details/6577401"&gt;让多核CPU占用率曲线听你指挥Linux实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The Google Resume&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;questions on scalability(Google,Amazon)&lt;/li&gt;
&lt;li&gt;more questions about C and C++,testing and design skills(Microsoft) &lt;/li&gt;
&lt;li&gt;Make sure you understand Apple’s products,What would you improve about the product(Apple)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are literally thousands of sample interview questions online for companies like Google, Microsoft,and Amazon—don’t try to memorize the answers. It’s impossible and won’t help you anyway!&lt;/p&gt;
&lt;h4&gt;Must know list&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Data Structures&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linked Lists&lt;/li&gt;
&lt;li&gt;Binary Trees&lt;/li&gt;
&lt;li&gt;Tries&lt;/li&gt;
&lt;li&gt;Stacks&lt;/li&gt;
&lt;li&gt;Queues&lt;/li&gt;
&lt;li&gt;Vectors/ArrayLists&lt;/li&gt;
&lt;li&gt;Hash Tables&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Algorithms&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Breadth First Search Bit Manipulation&lt;/li&gt;
&lt;li&gt;Depth First Search &lt;/li&gt;
&lt;li&gt;Binary Search&lt;/li&gt;
&lt;li&gt;Merge Sort&lt;/li&gt;
&lt;li&gt;Quick Sort&lt;/li&gt;
&lt;li&gt;Tree Insert/Find/etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Concepts&lt;ul&gt;
&lt;li&gt;Singleton Design Pattern&lt;/li&gt;
&lt;li&gt;Factory Design Pattern&lt;/li&gt;
&lt;li&gt;Memory (Stack vs. Heap)&lt;/li&gt;
&lt;li&gt;Recursion&lt;/li&gt;
&lt;li&gt;Big-O Time
For each of the topics, make sure you understand how to implement/use them, and (where applicable) the space and time complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>bash wiki</title><link href="n/bash-wiki.html" rel="alternate"></link><updated>2013-09-23T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-23:bash-wiki.html</id><summary type="html">&lt;h3&gt;Bash 快捷键&lt;/h3&gt;
&lt;h4&gt;Ctrl&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctrl-a/ctrl-e&lt;/code&gt;
    移动光标到行首/行尾,同&lt;code&gt;Home/End&lt;/code&gt;键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-b/ctrl-f&lt;/code&gt;
    后移/前移 一个字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-c&lt;/code&gt;
    杀死当前进程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-d&lt;/code&gt;
    杀死当前Shell。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-h&lt;/code&gt;
    删除左边一个字符, 同&lt;code&gt;Backspace&lt;/code&gt;键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-l&lt;/code&gt;
    清屏, 同clear&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-r/ctrl-R&lt;/code&gt;
    从之前键入过的历史命令中搜索&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-u/ctrl-k&lt;/code&gt;
    删除光标前/光标后的所有字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-y&lt;/code&gt;
    撤消前一次删除&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctrl-z&lt;/code&gt;
    挂起当前进程,之后可以使用&lt;code&gt;fg&lt;/code&gt;命令唤醒&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Alt&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Alt-b /Alt-f&lt;/code&gt;
    后移/前移 一个单词&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-c&lt;/code&gt;
    把当前字符改成首字母大写, 同时光标移到词尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-d&lt;/code&gt;
    删除当前位置到词尾的字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-l/Alt-u&lt;/code&gt;
    把当前单词变成全 小写/大写, 同时光标移到词尾。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-n /Alt-p&lt;/code&gt;
    在搜索历史中搜索&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-t&lt;/code&gt;
    光标前两个单词的位置互换, 并将光标移到词尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt-Backspace&lt;/code&gt;
    删除光标前一个单词, 同&lt;code&gt;Ctrl-w&lt;/code&gt;一样&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>Markdown 中文列表抽风</title><link href="n/markdown-zhong-wen-lie-biao-chou-feng.html" rel="alternate"></link><updated>2013-09-21T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-21:markdown-zhong-wen-lie-biao-chou-feng.html</id><summary type="html">&lt;p&gt;&lt;a href="http://yangzetian.github.io/2012/03/28/markdown/"&gt;原文&lt;/a&gt;
用 markdown 写带中文的列表时发现 jekyll 生成的网页中有的可以正常显示，有的则不行。折腾半天，发现如果列表项中含有英文字母等非中文字符，就可以正确显示，纯中文的那些打死也不行。&lt;/p&gt;
&lt;p&gt;上网查后得知原来是 jeklly 默认 markdown 引擎 maruku 的问题，将引擎改为 rdiscount 即可。做法是修改 _config.yml 文件，在 pygments: true 上面添加一行 markdown: rdiscount&lt;/p&gt;</summary></entry><entry><title>python抓取fm.douban的加心歌曲</title><link href="n/pythonzhua-qu-fmdoubande-jia-xin-ge-qu.html" rel="alternate"></link><updated>2013-09-20T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-20:pythonzhua-qu-fmdoubande-jia-xin-ge-qu.html</id><summary type="html">&lt;p&gt;对python的大名早有耳闻，是一种比较流行的脚本语言，python和ruby差不多是一个时候听说的，感觉它们的关系可能就跟vim和Emacs一样。那时候也是觉得自己的工程实践太少了，后来了解到豆瓣网站就主要是python写的。豆瓣是自己比较喜欢的网站，界面简洁、内容有营养、熟悉而又不失新鲜感。于是迫不及待地想系统地学习这门语言，借了《python简明教程》,粗略地看了一遍。参考了[welken博客]（http://www.wklken.me/) 的一些总结还有一个好玩的网站&lt;a href="http://www.pythonchallenge.com/"&gt;python challenge&lt;/a&gt;,那会主要时候看了别人写的答案，自己都不会，只是尝试这样一种游戏的学习方式多了解一些知识。暑假看了&lt;a href="http://djangobook.py3k.cn/2.0/"&gt;the Djangobook&lt;/a&gt;，原理和核心思想自己还是没掌握，需要再去细致阅读和理解。&lt;/p&gt;
&lt;p&gt;还了解到python用于网页抓取比较方便,了&lt;a href="http://blog.csdn.net/sding/article/details/6214207"&gt;爬虫抓站的基本技巧&lt;/a&gt;，有些还是技巧不太理解，可能是对www的通信机制还不太了解。当初照着别人写的登录网站的方法登录了睿思，就光获取了一下登录后的页面，其他什么也没干。仅此而已自己就觉得很神奇，竟然可以脱离浏览器用脚本登录网站，这种上网的体验从未有过。&lt;/p&gt;
&lt;p&gt;学校晚上熄灯早，有时候没网，这时无聊的时候自己想听听歌，由于自己习惯了在douban.fm上听歌，就想着把豆瓣中自己加心的歌曲下载下来。自己网站与浏览器的通信规则还不了解，就在github搜了别人写的相关的代码。有一个还是比较符合我的需求，&lt;a href="https://github.com/isnowfy/download_doubanfm"&gt;download_doubanfm&lt;/a&gt;。&lt;/p&gt;
&lt;h3&gt;参考前人的代码：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/qiuxiang/pydoubanfm"&gt;ubuntu下实现的豆瓣电台客户端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isnowfy/download_doubanfm"&gt;download_doubanfm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lastmayday/fmTags"&gt;fmTags&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;分析抓取的流程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;登录网站&lt;ul&gt;
&lt;li&gt;利用cookie，cookie封装到SimpleCookie对象，opener=urllib2.Request(RequestProcess(Jarcookie()))...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;获取红心歌曲列表&lt;ul&gt;
&lt;li&gt;红心歌曲的网页&lt;code&gt;url="http://douban.fm/mine#!type=liked"&lt;/code&gt;，但获取红心歌曲列表要重定向到&lt;code&gt;"http://douban.fm/j/play_record?ck=%s&amp;amp;spbid=%s&amp;amp;type=liked[&amp;amp;start=%d]"%(ck,spid,start)&lt;/code&gt;,返回的json格式的数据信息给出了每首歌曲的&lt;code&gt;artist,id,liked,path,picture,subject_title,title&lt;/code&gt;。根据path去抓取歌曲，根据picture去抓取专辑封面，其他信息用于把下载歌曲封装成mp3格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;抓取并保存红心歌曲&lt;ul&gt;
&lt;li&gt;根据歌曲的&lt;code&gt;path&lt;/code&gt;，获取这首歌所在专辑的页面信息，会有每首歌曲的sid和ssid。&lt;/li&gt;
&lt;li&gt;利用BeautifulSoup提取找到sid所对应的ssid&lt;/li&gt;
&lt;li&gt;程序中抓取&lt;code&gt;http://douban.fm/?start=1892894g124eg&lt;/code&gt;页面信息，然后什么也没干，再重定向到&lt;code&gt;http://douban.fm/j/mine/playlist?type=n&amp;amp;sid=&amp;amp;pt=0.0&amp;amp;channel=0&amp;amp;from=mainsite&lt;/code&gt;,从返回的json信息中提取歌曲的源地址。(?)歌曲列表信息是Request&lt;code&gt;http://douban.fm/j/mine/playlist?type=n&amp;amp;sid=&amp;amp;pt=0.0&amp;amp;channel=-3&amp;amp;from=mainsite&amp;amp;r=f5b061dff2&lt;/code&gt;时返回的。&lt;code&gt;f5b061dff2&lt;/code&gt;不知道是怎么得出的。&lt;/li&gt;
&lt;li&gt;根据歌曲的源地址下载歌曲，用eyeD3封装歌曲成mp3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;state:unfinished&lt;/p&gt;</summary></entry><entry><title>Tips of vim</title><link href="n/tips-of-vim.html" rel="alternate"></link><updated>2013-09-20T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-20:tips-of-vim.html</id><summary type="html">&lt;h3&gt;跳转&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;跳转至行首&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;跳转至行第一个非空字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;跳转至行尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mx&lt;/code&gt;设置书签,x只能是a-z的26个字母,&lt;code&gt;`x&lt;/code&gt;跳转到书签处&lt;code&gt;`&lt;/code&gt;是左边的键&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt;跳转到相配对的括号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-O&lt;/code&gt;跳转到表里较旧的光标位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-I&lt;/code&gt;跳转到表里较新的光标位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;''&lt;/code&gt;跳转到光标上次停靠的地方,是两个&lt;code&gt;'&lt;/code&gt;,而不是一个&lt;code&gt;"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{&lt;/code&gt;到上一段的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;}&lt;/code&gt;跳到下一段的的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(&lt;/code&gt;移到这个句子的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;)&lt;/code&gt;移到下一个句子的开头&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[[&lt;/code&gt;跳转至上一个函数要求代码块中&lt;code&gt;{&lt;/code&gt;必须单独占一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;]]&lt;/code&gt; 跳转至下一个函数要求代码块中&lt;code&gt;{&lt;/code&gt;必须单独占一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl-]&lt;/code&gt;跳转至函数或变量定义处&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gD&lt;/code&gt;跳转到局部变量的定义处&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;编辑多个文件&lt;/h3&gt;
&lt;p&gt;vim file1 file2 ..
* &lt;code&gt;nw&lt;/code&gt;保存当前文件编辑下一个&lt;/p&gt;
&lt;h3&gt;Problems&lt;/h3&gt;</summary></entry><entry><title>hack</title><link href="n/hack.html" rel="alternate"></link><updated>2013-09-19T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-19:hack.html</id><summary type="html">&lt;h2&gt;XSS攻击&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://baike.baidu.com/view/2161269.htm"&gt;XSS攻击-百度百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://coolshell.cn/articles/4914.html"&gt;新浪微博的XSS攻击&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>chrome extention development</title><link href="n/chrome-extention-development.html" rel="alternate"></link><updated>2013-09-13T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-09-13:chrome-extention-development.html</id><summary type="html">&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/extensions/getstarted.html"&gt;chrome extentions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.qiwen.name/2012/05/chrome.html"&gt;如何编写chrome插件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry><entry><title>javascript 权威指南学习笔记</title><link href="n/javascript-quan-wei-zhi-nan-xue-xi-bi-ji.html" rel="alternate"></link><updated>2013-08-19T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-08-19:javascript-quan-wei-zhi-nan-xue-xi-bi-ji.html</id><summary type="html">&lt;h3&gt;历史&lt;/h3&gt;
&lt;p&gt;javascript由网景公司创建&lt;/p&gt;
&lt;h3&gt;解决的问题&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;表单的有效性验证&lt;/li&gt;
&lt;li&gt;开发者首次能够在不重载网页的情况下修改它的外观和内容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;实现&lt;/h3&gt;
&lt;p&gt;JavaScript实现是由以下三个不同的部分组成的：
&lt;em&gt; 核心(ECMAscript)
&lt;/em&gt; 文档对象模型(DOM)
* 浏览器对象模型(BOM)&lt;/p&gt;
&lt;h4&gt;ECMAScript 描述了以下内容&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;li&gt;类型&lt;/li&gt;
&lt;li&gt;语句&lt;/li&gt;
&lt;li&gt;关键字&lt;/li&gt;
&lt;li&gt;保留字&lt;/li&gt;
&lt;li&gt;运算符&lt;/li&gt;
&lt;li&gt;对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;DOM&lt;/h4&gt;
&lt;p&gt;DOM（文档对象模型）是HTML和XML 的应用程序接口（API）。DOM 将把整个页面规划成由节点层级构成的文档
DOM 通过创建树来表示文档，从而使开发者对文档的内容和结构具有空前的控制力。用DOM API 可以轻松地删除、添加和替换节点。
&lt;em&gt; DOM Level 1 只是一个目标，即规划文档的结构
&lt;/em&gt; DOM Level 2 引入了几种 DOM 新模块，用于处理新的接口类型：
    * DOM 视图 - 描述跟踪文档的各种视图（即 CSS 样式化之前和 CSS 样式化之后的文档）
    * DOM 事件 - 描述事件的接口
    * DOM 样式 - 描述处理基于 CSS 样式的接口
    * DOM 遍历和范围 - 描述遍历和操作文档树的接口&lt;/p&gt;
&lt;h4&gt;BOM&lt;/h4&gt;
&lt;p&gt;BOM 主要处理浏览器窗口和框架，不过通常浏览器特定的 JavaScript 扩展都被看做 BOM 的一部分。这些扩展包括：
&lt;em&gt; 弹出新的浏览器窗口
&lt;/em&gt; 移动、关闭浏览器窗口以及调整窗口大小
&lt;em&gt; 提供 Web 浏览器详细信息的定位对象
&lt;/em&gt; 提供用户屏幕分辨率详细信息的屏幕对象
&lt;em&gt; 对 cookie 的支持
&lt;/em&gt; IE 扩展了 BOM，加入了 ActiveXObject 类，可以通过 JavaScript 实例化 ActiveX 对象&lt;/p&gt;
&lt;p&gt;由于没有相关的 BOM 标准，每种浏览器都有自己的 BOM 实现。有一些事实上的标准，如具有一个窗口对象和一个导航对象，不过每种浏览器可以为这些对象或其他对象定义自己的属性和方法。&lt;/p&gt;
&lt;h3&gt;关键字&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DOM Level 3 引入了以统一的方式载入和保持文档的方法（包含在新模块DOM Load and Save）以及验证文档（DOM Validation）的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;摘录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;javascript是高端的、动态的、弱类型的编程语言，非常适合面向对象和函数式的编程风格&lt;/li&gt;
&lt;li&gt;写一个健壮的客户端javascript程序并能正确地运行在多类型的平台上，的确是一种挑战&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;问题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;javascript语言和客户端javascript的关系？
    javascript可以用来编写客户端脚本代码，也可用来编写服务器端脚本代码，但是目前将它作为ie服务器端代码的开发语言已经很少用了。&lt;a href="http://book.51cto.com/art/200809/88857.htm"&gt;区分客户端JavaScript和服务端JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;javascript api是什么？&lt;/li&gt;
&lt;li&gt;javascript api和web实现的api的关系？&lt;/li&gt;
&lt;li&gt;javascript 早已超出了其脚本语言本身的范畴&lt;/li&gt;
&lt;li&gt;每一种编程语言都有各自的开发平台、标准库或api函数，用来提供诸如基本输入输出的功能。&lt;/li&gt;
&lt;li&gt;javascript把函数和数组看作对象&lt;/li&gt;
&lt;li&gt;javascript解释器有自己的内存管理机制,可以自动对内存进行垃圾回收&lt;/li&gt;
&lt;li&gt;可变类型和不可变类型没有理解(p45)&lt;/li&gt;
&lt;li&gt;javascript变量是无类型的,变量可以赋予任何类型的值&lt;/li&gt;
&lt;li&gt;在javascript的真实运行环境中,0.3-0.2=0.099 999 999 999 999 98&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3.8.3&lt;/code&gt;没有理解&lt;/li&gt;
&lt;li&gt;javascript采用函数作用域&lt;/li&gt;
&lt;li&gt;作用域链的那段阐述没有理解(p71) &lt;/li&gt;
&lt;li&gt;函数也可以通过函数语句来定义,而不是函数表达式&lt;/li&gt;
&lt;li&gt;假设a=1,那么b=(a++)+a的值为3,很多初学者会认为a增1的操作是在表达式计算完后执行的&lt;/li&gt;
&lt;li&gt;通过x!==x来判断x是否为NaN&lt;/li&gt;
&lt;li&gt;javascript语句小结(p128)&lt;/li&gt;
&lt;li&gt;javascript可以用来查询文档元素,修改CSS类,定义事件处理程序&lt;/li&gt;
&lt;li&gt;协议限定符是什么?(329)&lt;/li&gt;
&lt;li&gt;例13-4没看懂&lt;/li&gt;
&lt;li&gt;锁、死锁、竞态条件?(p336)&lt;/li&gt;
&lt;li&gt;HTML5定义了一种并发的控制方式，叫做"web worker"。&lt;/li&gt;
&lt;li&gt;异步脚本?(p337)&lt;/li&gt;
&lt;li&gt;客户端javascript时间线(p337)&lt;/li&gt;
&lt;li&gt;ES3和ES5是什么?&lt;/li&gt;
&lt;li&gt;浏览器嗅探器（browser sniffer):确定当前浏览器的厂商和版本的代码&lt;/li&gt;
&lt;li&gt;explorer里的条件注释&lt;/li&gt;
&lt;li&gt;websockets&lt;/li&gt;
&lt;li&gt;同源策略&lt;/li&gt;
&lt;li&gt;文档的来源包括协议、主机和载入文档的URL端口&lt;/li&gt;
&lt;li&gt;跨资源共享、跨文档消息&lt;/li&gt;
&lt;li&gt;ActiveX控件&lt;/li&gt;
&lt;li&gt;跨站脚本的危险&lt;/li&gt;
&lt;li&gt;基于客户端框架或类库来创建web应用非常便捷&lt;/li&gt;
&lt;li&gt;没看懂例14-1&lt;/li&gt;
&lt;li&gt;$函数&lt;/li&gt;
&lt;li&gt;文档的嵌套是什么？&lt;/li&gt;
&lt;li&gt;顶级窗体&lt;/li&gt;
&lt;li&gt;窗口和窗体的区别？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;元素&lt;/li&gt;
&lt;li&gt;文档对象模型（DOM）&lt;/li&gt;
&lt;li&gt;DocumentFragment节点&lt;/li&gt;
&lt;li&gt;原型对象&lt;/li&gt;
&lt;li&gt;命名空间识别的属性的方法（第四部分）&lt;/li&gt;
&lt;li&gt;火花线&lt;/li&gt;
&lt;li&gt;innerHTML和outerHTML属性&lt;/li&gt;
&lt;li&gt;例&lt;code&gt;15.5&lt;/code&gt;没看懂&lt;/li&gt;
&lt;li&gt;insertAdjacentHTML是什么属性&lt;/li&gt;
&lt;li&gt;浏览器的怪异模式和标准模式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;15.8.5&lt;/code&gt;上面的一句话“scrollIntoView()的行为与设置window.location.hash为一个命名锚点（ &lt;code&gt;&amp;lt;a name=""&amp;gt;&lt;/code&gt;元素）的名字后浏览器产生的行为类似” &lt;/li&gt;
&lt;li&gt;unescape()函数（p417）&lt;/li&gt;
&lt;li&gt;web字体&lt;/li&gt;
&lt;li&gt;计算样式&lt;/li&gt;
&lt;li&gt;例16.6没看懂&lt;/li&gt;
&lt;li&gt;客户端javascript程序采用了异步事件驱动编程模型&lt;/li&gt;
&lt;li&gt;冒泡的事件和不冒泡的事件&lt;/li&gt;
&lt;li&gt;p445的程序没看懂&lt;/li&gt;
&lt;li&gt;延迟脚本、异步脚本&lt;/li&gt;
&lt;li&gt;例17-4没看懂&lt;/li&gt;
&lt;li&gt;捕获事件处理程序和事件处理程序的区别&lt;/li&gt;
&lt;li&gt;p464的例子怎么没效果&lt;/li&gt;
&lt;li&gt;例&lt;code&gt;17.5&lt;/code&gt;没看懂&lt;/li&gt;
&lt;li&gt;例&lt;code&gt;17.6&lt;/code&gt;没看懂&lt;/li&gt;
&lt;li&gt;例17.8没看&lt;/li&gt;
&lt;/ol&gt;</summary></entry><entry><title>前端学习</title><link href="n/qian-duan-xue-xi.html" rel="alternate"></link><updated>2013-08-18T00:00:00+08:00</updated><author><name>smallest</name></author><id>tag:n,2013-08-18:qian-duan-xue-xi.html</id><summary type="html">&lt;h2&gt;1.资源：&lt;/h2&gt;
&lt;h3&gt;学习论坛&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.w3cfuns.com/"&gt;w3cfun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;UED&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ued.sina.com/"&gt;新浪UED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ped.alipay.com/"&gt;支付宝PED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ued.alipay.com/"&gt;支付宝UED官方网站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mux.baidu.com/"&gt;百度MUX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.baiduux.com/"&gt;百度泛用户体验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cdc.tencent.com/"&gt;腾讯CDC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wsd.tencent.com/"&gt;腾讯WSD用户体验设计团队&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://udc.weibo.com/"&gt;微博UDC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://uedc.163.com/"&gt;网易用户体验设计中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.aliued.cn/"&gt;阿里巴巴（中国站）用户体验设计部博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ued.taobao.com/"&gt;blog/淘宝网用户体验团队博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cued.xunlei.com/"&gt;迅雷用户体验设计中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ued.ctrip.com/"&gt;blog/携程UED&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ucdchina.com/"&gt;UED大社区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://123.jser.us/"&gt;前端导航站&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2.技术&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;html5&lt;/li&gt;
&lt;li&gt;css&lt;/li&gt;
&lt;li&gt;javascript&lt;ul&gt;
&lt;li&gt;&lt;a href="http://baike.baidu.com/view/1020297.htm"&gt;jquery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Responsive Web Design&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2012/05/responsive_web_design.html"&gt;自适应网页设计&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.搭建博客&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;jekyll&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jekyllbootstrap.com/"&gt;Zero to Hosted Jekyll Blog in 3 Minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://crate.io/packages/pelican/"&gt;pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lizherui.com/pages/2013/08/17/build_blog.html"&gt;一步一步打造Geek风格的技术博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/3.2/"&gt;pelican官方文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.getpelican.com/"&gt;pelican development blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mikewootc.com/wiki/tool/sitebuild/mikewiki.html"&gt;用markdown + pandoc + makefile + github搭建个人wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4.工具&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;markdown&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Markdown"&gt;维基百科markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ued.taobao.com/blog/2012/07/getting-started-with-markdown/"&gt;淘宝UED博客:开始使用markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary></entry></feed>